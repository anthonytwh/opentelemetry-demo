apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-resolved.yml --volumes=configMap -o otel-k8s-manifests/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: featureflagservice
  name: featureflagservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: featureflagservice
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-resolved.yml --volumes=configMap -o otel-k8s-manifests/
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/opentelemetry-demo: "true"
        io.kompose.service: featureflagservice
    spec:
      containers:
        - env:
            - name: DATABASE_URL
              value: ecto://ffs:ffs@ffs-postgres:5432/ffs
            - name: FEATURE_FLAG_GRPC_SERVICE_PORT
              value: "50053"
            - name: FEATURE_FLAG_SERVICE_PATH_ROOT
              value: '"/feature"'
            - name: FEATURE_FLAG_SERVICE_PORT
              value: "8081"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
              value: grpc
            - name: OTEL_SERVICE_NAME
              value: featureflagservice
          image: ghcr.io/open-telemetry/demo:1.3.1-featureflagservice
          livenessProbe:
            exec:
              command:
                - curl
                - -H
                - 'baggage: synthetic_request=true'
                - -f
                - http://localhost:8081
          name: feature-flag-service
          ports:
            - containerPort: 8081
            - containerPort: 50053
          resources:
            limits:
              memory: "183500800"
      restartPolicy: Always
status: {}
